valgrind --leak-check=full ./build/app/shell-app
==8917== Memcheck, a memory error detector
==8917== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8917== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==8917== Command: ./build/app/shell-app
==8917== 
Averaged sensor reading: 10
==8917== Conditional jump or move depends on uninitialised value(s)
==8917==    at 0x109DCF: main (in /home/rashmikapu/Desktop/808x/Valgrind/cpp-boilerplate-v2/build/app/shell-app)
==8917== 
==8917== 
==8917== HEAP SUMMARY:
==8917==     in use at exit: 44 bytes in 2 blocks
==8917==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==8917== 
==8917== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==8917==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==8917==    by 0x10931E: AnalogSensor::Read() (in /home/rashmikapu/Desktop/808x/Valgrind/cpp-boilerplate-v2/build/app/shell-app)
==8917==    by 0x109DAB: main (in /home/rashmikapu/Desktop/808x/Valgrind/cpp-boilerplate-v2/build/app/shell-app)
==8917== 
==8917== LEAK SUMMARY:
==8917==    definitely lost: 24 bytes in 1 blocks
==8917==    indirectly lost: 20 bytes in 1 blocks
==8917==      possibly lost: 0 bytes in 0 blocks
==8917==    still reachable: 0 bytes in 0 blocks
==8917==         suppressed: 0 bytes in 0 blocks
==8917== 
==8917== Use --track-origins=yes to see where uninitialised values come from
==8917== For lists of detected and suppressed errors, rerun with: -s
==8917== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


